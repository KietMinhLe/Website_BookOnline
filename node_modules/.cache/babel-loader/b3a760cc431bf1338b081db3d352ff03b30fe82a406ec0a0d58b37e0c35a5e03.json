{"ast":null,"code":"// User Model\nexport class User {\n  constructor(id, email, password, firstName, lastName, phone, address, role = 'customer') {\n    this.id = id;\n    this.email = email;\n    this.password = password;\n    this.firstName = firstName;\n    this.lastName = lastName;\n    this.phone = phone;\n    this.address = address;\n    this.role = role;\n    this.isActive = true;\n    this.createdAt = new Date();\n    this.updatedAt = new Date();\n  }\n\n  // Getter methods\n  getFullName() {\n    return `${this.firstName} ${this.lastName}`;\n  }\n  isAdmin() {\n    return this.role === 'admin';\n  }\n  isCustomer() {\n    return this.role === 'customer';\n  }\n\n  // Methods\n  updateProfile(data) {\n    this.firstName = data.firstName || this.firstName;\n    this.lastName = data.lastName || this.lastName;\n    this.phone = data.phone || this.phone;\n    this.address = data.address || this.address;\n    this.updatedAt = new Date();\n  }\n  changePassword(newPassword) {\n    this.password = newPassword;\n    this.updatedAt = new Date();\n  }\n\n  // Static methods\n  static fromJSON(json) {\n    const user = new User(json.id, json.email, json.password, json.firstName, json.lastName, json.phone, json.address, json.role);\n    user.isActive = json.isActive;\n    user.createdAt = new Date(json.createdAt);\n    user.updatedAt = new Date(json.updatedAt);\n    return user;\n  }\n  toJSON() {\n    return {\n      id: this.id,\n      email: this.email,\n      password: this.password,\n      firstName: this.firstName,\n      lastName: this.lastName,\n      phone: this.phone,\n      address: this.address,\n      role: this.role,\n      isActive: this.isActive,\n      createdAt: this.createdAt,\n      updatedAt: this.updatedAt\n    };\n  }\n}","map":{"version":3,"names":["User","constructor","id","email","password","firstName","lastName","phone","address","role","isActive","createdAt","Date","updatedAt","getFullName","isAdmin","isCustomer","updateProfile","data","changePassword","newPassword","fromJSON","json","user","toJSON"],"sources":["D:/frontend/src/models/User.js"],"sourcesContent":["// User Model\r\nexport class User {\r\n  constructor(id, email, password, firstName, lastName, phone, address, role = 'customer') {\r\n    this.id = id;\r\n    this.email = email;\r\n    this.password = password;\r\n    this.firstName = firstName;\r\n    this.lastName = lastName;\r\n    this.phone = phone;\r\n    this.address = address;\r\n    this.role = role;\r\n    this.isActive = true;\r\n    this.createdAt = new Date();\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  // Getter methods\r\n  getFullName() {\r\n    return `${this.firstName} ${this.lastName}`;\r\n  }\r\n\r\n  isAdmin() {\r\n    return this.role === 'admin';\r\n  }\r\n\r\n  isCustomer() {\r\n    return this.role === 'customer';\r\n  }\r\n\r\n  // Methods\r\n  updateProfile(data) {\r\n    this.firstName = data.firstName || this.firstName;\r\n    this.lastName = data.lastName || this.lastName;\r\n    this.phone = data.phone || this.phone;\r\n    this.address = data.address || this.address;\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  changePassword(newPassword) {\r\n    this.password = newPassword;\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  // Static methods\r\n  static fromJSON(json) {\r\n    const user = new User(\r\n      json.id,\r\n      json.email,\r\n      json.password,\r\n      json.firstName,\r\n      json.lastName,\r\n      json.phone,\r\n      json.address,\r\n      json.role\r\n    );\r\n    user.isActive = json.isActive;\r\n    user.createdAt = new Date(json.createdAt);\r\n    user.updatedAt = new Date(json.updatedAt);\r\n    return user;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      id: this.id,\r\n      email: this.email,\r\n      password: this.password,\r\n      firstName: this.firstName,\r\n      lastName: this.lastName,\r\n      phone: this.phone,\r\n      address: this.address,\r\n      role: this.role,\r\n      isActive: this.isActive,\r\n      createdAt: this.createdAt,\r\n      updatedAt: this.updatedAt\r\n    };\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}