{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { toast } from 'react-toastify';\nexport const useNotifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n\n  // Add new notification\n  const addNotification = useCallback(notification => {\n    const newNotification = {\n      id: Date.now(),\n      type: notification.type || 'info',\n      title: notification.title,\n      message: notification.message,\n      time: 'Vừa xong',\n      read: false,\n      createdAt: new Date()\n    };\n    setNotifications(prev => [newNotification, ...prev]);\n\n    // Show toast notification\n    const toastOptions = {\n      position: \"top-right\",\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    };\n    switch (notification.type) {\n      case 'success':\n        toast.success(notification.message, toastOptions);\n        break;\n      case 'error':\n        toast.error(notification.message, toastOptions);\n        break;\n      case 'warning':\n        toast.warning(notification.message, toastOptions);\n        break;\n      default:\n        toast.info(notification.message, toastOptions);\n    }\n  }, []);\n\n  // Mark notification as read\n  const markAsRead = useCallback(id => {\n    setNotifications(prev => prev.map(notification => notification.id === id ? {\n      ...notification,\n      read: true\n    } : notification));\n  }, []);\n\n  // Mark all notifications as read\n  const markAllAsRead = useCallback(() => {\n    setNotifications(prev => prev.map(notification => ({\n      ...notification,\n      read: true\n    })));\n  }, []);\n\n  // Delete notification\n  const deleteNotification = useCallback(id => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  // Clear all notifications\n  const clearAllNotifications = useCallback(() => {\n    setNotifications([]);\n  }, []);\n\n  // Get unread count\n  const getUnreadCount = useCallback(() => {\n    return notifications.filter(notification => !notification.read).length;\n  }, [notifications]);\n\n  // Get recent notifications (last 10)\n  const getRecentNotifications = useCallback(() => {\n    return notifications.slice(0, 10);\n  }, [notifications]);\n  return {\n    notifications,\n    addNotification,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n    clearAllNotifications,\n    getUnreadCount,\n    getRecentNotifications\n  };\n};\n\n// Notification types\n_s(useNotifications, \"HZFMxg8Wgen6hJDk6Oyzp5x2o+I=\");\nexport const NOTIFICATION_TYPES = {\n  SUCCESS: 'success',\n  ERROR: 'error',\n  WARNING: 'warning',\n  INFO: 'info'\n};\n\n// Predefined notification messages\nexport const NOTIFICATION_MESSAGES = {\n  ORDER_SUCCESS: {\n    type: NOTIFICATION_TYPES.SUCCESS,\n    title: 'Đặt hàng thành công',\n    message: 'Đơn hàng của bạn đã được xác nhận và đang được chuẩn bị.'\n  },\n  ORDER_CANCELLED: {\n    type: NOTIFICATION_TYPES.WARNING,\n    title: 'Hủy đơn hàng',\n    message: 'Đơn hàng của bạn đã được hủy thành công.'\n  },\n  PAYMENT_SUCCESS: {\n    type: NOTIFICATION_TYPES.SUCCESS,\n    title: 'Thanh toán thành công',\n    message: 'Thanh toán của bạn đã được xử lý thành công.'\n  },\n  PAYMENT_FAILED: {\n    type: NOTIFICATION_TYPES.ERROR,\n    title: 'Thanh toán thất bại',\n    message: 'Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.'\n  },\n  SHIPPING_UPDATE: {\n    type: NOTIFICATION_TYPES.INFO,\n    title: 'Cập nhật giao hàng',\n    message: 'Đơn hàng của bạn đang được vận chuyển.'\n  },\n  DELIVERY_SUCCESS: {\n    type: NOTIFICATION_TYPES.SUCCESS,\n    title: 'Giao hàng thành công',\n    message: 'Đơn hàng đã được giao đến địa chỉ của bạn.'\n  },\n  LOW_STOCK: {\n    type: NOTIFICATION_TYPES.WARNING,\n    title: 'Sản phẩm sắp hết hàng',\n    message: 'Sản phẩm này chỉ còn ít hàng trong kho.'\n  },\n  PROMOTION: {\n    type: NOTIFICATION_TYPES.INFO,\n    title: 'Khuyến mãi mới',\n    message: 'Có khuyến mãi mới dành cho bạn.'\n  }\n};","map":{"version":3,"names":["useState","useCallback","toast","useNotifications","_s","notifications","setNotifications","addNotification","notification","newNotification","id","Date","now","type","title","message","time","read","createdAt","prev","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","error","warning","info","markAsRead","map","markAllAsRead","deleteNotification","filter","clearAllNotifications","getUnreadCount","length","getRecentNotifications","slice","NOTIFICATION_TYPES","SUCCESS","ERROR","WARNING","INFO","NOTIFICATION_MESSAGES","ORDER_SUCCESS","ORDER_CANCELLED","PAYMENT_SUCCESS","PAYMENT_FAILED","SHIPPING_UPDATE","DELIVERY_SUCCESS","LOW_STOCK","PROMOTION"],"sources":["D:/frontend/src/hooks/useNotifications.js"],"sourcesContent":["import { useState, useCallback } from 'react';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const useNotifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n\r\n  // Add new notification\r\n  const addNotification = useCallback((notification) => {\r\n    const newNotification = {\r\n      id: Date.now(),\r\n      type: notification.type || 'info',\r\n      title: notification.title,\r\n      message: notification.message,\r\n      time: 'Vừa xong',\r\n      read: false,\r\n      createdAt: new Date()\r\n    };\r\n\r\n    setNotifications(prev => [newNotification, ...prev]);\r\n\r\n    // Show toast notification\r\n    const toastOptions = {\r\n      position: \"top-right\",\r\n      autoClose: 5000,\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n    };\r\n\r\n    switch (notification.type) {\r\n      case 'success':\r\n        toast.success(notification.message, toastOptions);\r\n        break;\r\n      case 'error':\r\n        toast.error(notification.message, toastOptions);\r\n        break;\r\n      case 'warning':\r\n        toast.warning(notification.message, toastOptions);\r\n        break;\r\n      default:\r\n        toast.info(notification.message, toastOptions);\r\n    }\r\n  }, []);\r\n\r\n  // Mark notification as read\r\n  const markAsRead = useCallback((id) => {\r\n    setNotifications(prev =>\r\n      prev.map(notification =>\r\n        notification.id === id\r\n          ? { ...notification, read: true }\r\n          : notification\r\n      )\r\n    );\r\n  }, []);\r\n\r\n  // Mark all notifications as read\r\n  const markAllAsRead = useCallback(() => {\r\n    setNotifications(prev =>\r\n      prev.map(notification => ({ ...notification, read: true }))\r\n    );\r\n  }, []);\r\n\r\n  // Delete notification\r\n  const deleteNotification = useCallback((id) => {\r\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\r\n  }, []);\r\n\r\n  // Clear all notifications\r\n  const clearAllNotifications = useCallback(() => {\r\n    setNotifications([]);\r\n  }, []);\r\n\r\n  // Get unread count\r\n  const getUnreadCount = useCallback(() => {\r\n    return notifications.filter(notification => !notification.read).length;\r\n  }, [notifications]);\r\n\r\n  // Get recent notifications (last 10)\r\n  const getRecentNotifications = useCallback(() => {\r\n    return notifications.slice(0, 10);\r\n  }, [notifications]);\r\n\r\n  return {\r\n    notifications,\r\n    addNotification,\r\n    markAsRead,\r\n    markAllAsRead,\r\n    deleteNotification,\r\n    clearAllNotifications,\r\n    getUnreadCount,\r\n    getRecentNotifications\r\n  };\r\n};\r\n\r\n// Notification types\r\nexport const NOTIFICATION_TYPES = {\r\n  SUCCESS: 'success',\r\n  ERROR: 'error',\r\n  WARNING: 'warning',\r\n  INFO: 'info'\r\n};\r\n\r\n// Predefined notification messages\r\nexport const NOTIFICATION_MESSAGES = {\r\n  ORDER_SUCCESS: {\r\n    type: NOTIFICATION_TYPES.SUCCESS,\r\n    title: 'Đặt hàng thành công',\r\n    message: 'Đơn hàng của bạn đã được xác nhận và đang được chuẩn bị.'\r\n  },\r\n  ORDER_CANCELLED: {\r\n    type: NOTIFICATION_TYPES.WARNING,\r\n    title: 'Hủy đơn hàng',\r\n    message: 'Đơn hàng của bạn đã được hủy thành công.'\r\n  },\r\n  PAYMENT_SUCCESS: {\r\n    type: NOTIFICATION_TYPES.SUCCESS,\r\n    title: 'Thanh toán thành công',\r\n    message: 'Thanh toán của bạn đã được xử lý thành công.'\r\n  },\r\n  PAYMENT_FAILED: {\r\n    type: NOTIFICATION_TYPES.ERROR,\r\n    title: 'Thanh toán thất bại',\r\n    message: 'Có lỗi xảy ra trong quá trình thanh toán. Vui lòng thử lại.'\r\n  },\r\n  SHIPPING_UPDATE: {\r\n    type: NOTIFICATION_TYPES.INFO,\r\n    title: 'Cập nhật giao hàng',\r\n    message: 'Đơn hàng của bạn đang được vận chuyển.'\r\n  },\r\n  DELIVERY_SUCCESS: {\r\n    type: NOTIFICATION_TYPES.SUCCESS,\r\n    title: 'Giao hàng thành công',\r\n    message: 'Đơn hàng đã được giao đến địa chỉ của bạn.'\r\n  },\r\n  LOW_STOCK: {\r\n    type: NOTIFICATION_TYPES.WARNING,\r\n    title: 'Sản phẩm sắp hết hàng',\r\n    message: 'Sản phẩm này chỉ còn ít hàng trong kho.'\r\n  },\r\n  PROMOTION: {\r\n    type: NOTIFICATION_TYPES.INFO,\r\n    title: 'Khuyến mãi mới',\r\n    message: 'Có khuyến mãi mới dành cho bạn.'\r\n  }\r\n};\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,KAAK,QAAQ,gBAAgB;AAEtC,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA,MAAMO,eAAe,GAAGN,WAAW,CAAEO,YAAY,IAAK;IACpD,MAAMC,eAAe,GAAG;MACtBC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MACdC,IAAI,EAAEL,YAAY,CAACK,IAAI,IAAI,MAAM;MACjCC,KAAK,EAAEN,YAAY,CAACM,KAAK;MACzBC,OAAO,EAAEP,YAAY,CAACO,OAAO;MAC7BC,IAAI,EAAE,UAAU;MAChBC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,IAAIP,IAAI,CAAC;IACtB,CAAC;IAEDL,gBAAgB,CAACa,IAAI,IAAI,CAACV,eAAe,EAAE,GAAGU,IAAI,CAAC,CAAC;;IAEpD;IACA,MAAMC,YAAY,GAAG;MACnBC,QAAQ,EAAE,WAAW;MACrBC,SAAS,EAAE,IAAI;MACfC,eAAe,EAAE,KAAK;MACtBC,YAAY,EAAE,IAAI;MAClBC,YAAY,EAAE,IAAI;MAClBC,SAAS,EAAE;IACb,CAAC;IAED,QAAQlB,YAAY,CAACK,IAAI;MACvB,KAAK,SAAS;QACZX,KAAK,CAACyB,OAAO,CAACnB,YAAY,CAACO,OAAO,EAAEK,YAAY,CAAC;QACjD;MACF,KAAK,OAAO;QACVlB,KAAK,CAAC0B,KAAK,CAACpB,YAAY,CAACO,OAAO,EAAEK,YAAY,CAAC;QAC/C;MACF,KAAK,SAAS;QACZlB,KAAK,CAAC2B,OAAO,CAACrB,YAAY,CAACO,OAAO,EAAEK,YAAY,CAAC;QACjD;MACF;QACElB,KAAK,CAAC4B,IAAI,CAACtB,YAAY,CAACO,OAAO,EAAEK,YAAY,CAAC;IAClD;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMW,UAAU,GAAG9B,WAAW,CAAES,EAAE,IAAK;IACrCJ,gBAAgB,CAACa,IAAI,IACnBA,IAAI,CAACa,GAAG,CAACxB,YAAY,IACnBA,YAAY,CAACE,EAAE,KAAKA,EAAE,GAClB;MAAE,GAAGF,YAAY;MAAES,IAAI,EAAE;IAAK,CAAC,GAC/BT,YACN,CACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyB,aAAa,GAAGhC,WAAW,CAAC,MAAM;IACtCK,gBAAgB,CAACa,IAAI,IACnBA,IAAI,CAACa,GAAG,CAACxB,YAAY,KAAK;MAAE,GAAGA,YAAY;MAAES,IAAI,EAAE;IAAK,CAAC,CAAC,CAC5D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiB,kBAAkB,GAAGjC,WAAW,CAAES,EAAE,IAAK;IAC7CJ,gBAAgB,CAACa,IAAI,IAAIA,IAAI,CAACgB,MAAM,CAAC3B,YAAY,IAAIA,YAAY,CAACE,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC/E,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM0B,qBAAqB,GAAGnC,WAAW,CAAC,MAAM;IAC9CK,gBAAgB,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM+B,cAAc,GAAGpC,WAAW,CAAC,MAAM;IACvC,OAAOI,aAAa,CAAC8B,MAAM,CAAC3B,YAAY,IAAI,CAACA,YAAY,CAACS,IAAI,CAAC,CAACqB,MAAM;EACxE,CAAC,EAAE,CAACjC,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMkC,sBAAsB,GAAGtC,WAAW,CAAC,MAAM;IAC/C,OAAOI,aAAa,CAACmC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;EACnC,CAAC,EAAE,CAACnC,aAAa,CAAC,CAAC;EAEnB,OAAO;IACLA,aAAa;IACbE,eAAe;IACfwB,UAAU;IACVE,aAAa;IACbC,kBAAkB;IAClBE,qBAAqB;IACrBC,cAAc;IACdE;EACF,CAAC;AACH,CAAC;;AAED;AAAAnC,EAAA,CA5FaD,gBAAgB;AA6F7B,OAAO,MAAMsC,kBAAkB,GAAG;EAChCC,OAAO,EAAE,SAAS;EAClBC,KAAK,EAAE,OAAO;EACdC,OAAO,EAAE,SAAS;EAClBC,IAAI,EAAE;AACR,CAAC;;AAED;AACA,OAAO,MAAMC,qBAAqB,GAAG;EACnCC,aAAa,EAAE;IACblC,IAAI,EAAE4B,kBAAkB,CAACC,OAAO;IAChC5B,KAAK,EAAE,qBAAqB;IAC5BC,OAAO,EAAE;EACX,CAAC;EACDiC,eAAe,EAAE;IACfnC,IAAI,EAAE4B,kBAAkB,CAACG,OAAO;IAChC9B,KAAK,EAAE,cAAc;IACrBC,OAAO,EAAE;EACX,CAAC;EACDkC,eAAe,EAAE;IACfpC,IAAI,EAAE4B,kBAAkB,CAACC,OAAO;IAChC5B,KAAK,EAAE,uBAAuB;IAC9BC,OAAO,EAAE;EACX,CAAC;EACDmC,cAAc,EAAE;IACdrC,IAAI,EAAE4B,kBAAkB,CAACE,KAAK;IAC9B7B,KAAK,EAAE,qBAAqB;IAC5BC,OAAO,EAAE;EACX,CAAC;EACDoC,eAAe,EAAE;IACftC,IAAI,EAAE4B,kBAAkB,CAACI,IAAI;IAC7B/B,KAAK,EAAE,oBAAoB;IAC3BC,OAAO,EAAE;EACX,CAAC;EACDqC,gBAAgB,EAAE;IAChBvC,IAAI,EAAE4B,kBAAkB,CAACC,OAAO;IAChC5B,KAAK,EAAE,sBAAsB;IAC7BC,OAAO,EAAE;EACX,CAAC;EACDsC,SAAS,EAAE;IACTxC,IAAI,EAAE4B,kBAAkB,CAACG,OAAO;IAChC9B,KAAK,EAAE,uBAAuB;IAC9BC,OAAO,EAAE;EACX,CAAC;EACDuC,SAAS,EAAE;IACTzC,IAAI,EAAE4B,kBAAkB,CAACI,IAAI;IAC7B/B,KAAK,EAAE,gBAAgB;IACvBC,OAAO,EAAE;EACX;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}