{"ast":null,"code":"// Cart Model\nexport class Cart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.updatedAt = new Date();\n  }\n\n  // Methods\n  addItem(book, quantity = 1) {\n    const existingItem = this.items.find(item => item.book.id === book.id);\n    if (existingItem) {\n      existingItem.quantity += quantity;\n    } else {\n      this.items.push({\n        book: book,\n        quantity: quantity,\n        addedAt: new Date()\n      });\n    }\n    this.calculateTotal();\n    this.updatedAt = new Date();\n  }\n  removeItem(bookId) {\n    this.items = this.items.filter(item => item.book.id !== bookId);\n    this.calculateTotal();\n    this.updatedAt = new Date();\n  }\n  updateQuantity(bookId, quantity) {\n    const item = this.items.find(item => item.book.id === bookId);\n    if (item) {\n      if (quantity <= 0) {\n        this.removeItem(bookId);\n      } else {\n        item.quantity = quantity;\n        this.calculateTotal();\n        this.updatedAt = new Date();\n      }\n    }\n  }\n  clear() {\n    this.items = [];\n    this.total = 0;\n    this.updatedAt = new Date();\n  }\n  calculateTotal() {\n    this.total = this.items.reduce((sum, item) => {\n      return sum + item.book.price * item.quantity;\n    }, 0);\n  }\n\n  // Getter methods\n  getItemCount() {\n    return this.items.reduce((count, item) => count + item.quantity, 0);\n  }\n  getTotalItems() {\n    return this.items.length;\n  }\n  getFormattedTotal() {\n    return new Intl.NumberFormat('vi-VN', {\n      style: 'currency',\n      currency: 'VND'\n    }).format(this.total);\n  }\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  // Static methods\n  static fromJSON(json) {\n    const cart = new Cart();\n    cart.items = json.items.map(item => ({\n      book: item.book,\n      quantity: item.quantity,\n      addedAt: new Date(item.addedAt)\n    }));\n    cart.total = json.total;\n    cart.updatedAt = new Date(json.updatedAt);\n    return cart;\n  }\n  toJSON() {\n    return {\n      items: this.items.map(item => ({\n        book: item.book,\n        quantity: item.quantity,\n        addedAt: item.addedAt\n      })),\n      total: this.total,\n      updatedAt: this.updatedAt\n    };\n  }\n}","map":{"version":3,"names":["Cart","constructor","items","total","updatedAt","Date","addItem","book","quantity","existingItem","find","item","id","push","addedAt","calculateTotal","removeItem","bookId","filter","updateQuantity","clear","reduce","sum","price","getItemCount","count","getTotalItems","length","getFormattedTotal","Intl","NumberFormat","style","currency","format","isEmpty","fromJSON","json","cart","map","toJSON"],"sources":["D:/frontend/src/models/Cart.js"],"sourcesContent":["// Cart Model\r\nexport class Cart {\r\n  constructor() {\r\n    this.items = [];\r\n    this.total = 0;\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  // Methods\r\n  addItem(book, quantity = 1) {\r\n    const existingItem = this.items.find(item => item.book.id === book.id);\r\n    \r\n    if (existingItem) {\r\n      existingItem.quantity += quantity;\r\n    } else {\r\n      this.items.push({\r\n        book: book,\r\n        quantity: quantity,\r\n        addedAt: new Date()\r\n      });\r\n    }\r\n    \r\n    this.calculateTotal();\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  removeItem(bookId) {\r\n    this.items = this.items.filter(item => item.book.id !== bookId);\r\n    this.calculateTotal();\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  updateQuantity(bookId, quantity) {\r\n    const item = this.items.find(item => item.book.id === bookId);\r\n    if (item) {\r\n      if (quantity <= 0) {\r\n        this.removeItem(bookId);\r\n      } else {\r\n        item.quantity = quantity;\r\n        this.calculateTotal();\r\n        this.updatedAt = new Date();\r\n      }\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.items = [];\r\n    this.total = 0;\r\n    this.updatedAt = new Date();\r\n  }\r\n\r\n  calculateTotal() {\r\n    this.total = this.items.reduce((sum, item) => {\r\n      return sum + (item.book.price * item.quantity);\r\n    }, 0);\r\n  }\r\n\r\n  // Getter methods\r\n  getItemCount() {\r\n    return this.items.reduce((count, item) => count + item.quantity, 0);\r\n  }\r\n\r\n  getTotalItems() {\r\n    return this.items.length;\r\n  }\r\n\r\n  getFormattedTotal() {\r\n    return new Intl.NumberFormat('vi-VN', {\r\n      style: 'currency',\r\n      currency: 'VND'\r\n    }).format(this.total);\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.items.length === 0;\r\n  }\r\n\r\n  // Static methods\r\n  static fromJSON(json) {\r\n    const cart = new Cart();\r\n    cart.items = json.items.map(item => ({\r\n      book: item.book,\r\n      quantity: item.quantity,\r\n      addedAt: new Date(item.addedAt)\r\n    }));\r\n    cart.total = json.total;\r\n    cart.updatedAt = new Date(json.updatedAt);\r\n    return cart;\r\n  }\r\n\r\n  toJSON() {\r\n    return {\r\n      items: this.items.map(item => ({\r\n        book: item.book,\r\n        quantity: item.quantity,\r\n        addedAt: item.addedAt\r\n      })),\r\n      total: this.total,\r\n      updatedAt: this.updatedAt\r\n    };\r\n  }\r\n}\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}