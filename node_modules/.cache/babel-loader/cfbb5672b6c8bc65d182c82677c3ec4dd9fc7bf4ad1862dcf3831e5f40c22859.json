{"ast":null,"code":"import React,{useState}from'react';import{Button,Badge}from'react-bootstrap';import{FaBell}from'react-icons/fa';import{Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NotificationBell=()=>{const[unreadCount]=useState(3);// Mock unread count\nreturn/*#__PURE__*/_jsxs(Link,{to:\"/notifications\",className:\"position-relative me-2\",children:[/*#__PURE__*/_jsx(FaBell,{}),unreadCount>0&&/*#__PURE__*/_jsx(Badge,{bg:\"danger\",className:\"position-absolute top-0 end-0\",children:unreadCount})]});};export default NotificationBell;","map":{"version":3,"names":["React","useState","Button","Badge","FaBell","Link","jsx","_jsx","jsxs","_jsxs","NotificationBell","unreadCount","to","className","children","bg"],"sources":["D:/frontend/src/components/NotificationBell.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button, Badge } from 'react-bootstrap';\r\nimport { FaBell } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotificationBell = () => {\r\n  const [unreadCount] = useState(3); // Mock unread count\r\n\r\n  return (\r\n    <Link to=\"/notifications\" className=\"position-relative me-2\">\r\n      <FaBell />\r\n      {unreadCount > 0 && (\r\n        <Badge bg=\"danger\" className=\"position-absolute top-0 end-0\">\r\n          {unreadCount}\r\n        </Badge>\r\n      )}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default NotificationBell;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,CAAEC,KAAK,KAAQ,iBAAiB,CAC/C,OAASC,MAAM,KAAQ,gBAAgB,CACvC,OAASC,IAAI,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,WAAW,CAAC,CAAGV,QAAQ,CAAC,CAAC,CAAC,CAAE;AAEnC,mBACEQ,KAAA,CAACJ,IAAI,EAACO,EAAE,CAAC,gBAAgB,CAACC,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eAC1DP,IAAA,CAACH,MAAM,GAAE,CAAC,CACTO,WAAW,CAAG,CAAC,eACdJ,IAAA,CAACJ,KAAK,EAACY,EAAE,CAAC,QAAQ,CAACF,SAAS,CAAC,+BAA+B,CAAAC,QAAA,CACzDH,WAAW,CACP,CACR,EACG,CAAC,CAEX,CAAC,CAED,cAAe,CAAAD,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}